# JMH version: 1.21
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 600 ms each
# Timeout: 10 min per iteration
# Threads: 100 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: redisClientBenchmark.JedisConnection.get

# Run progress: 0.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 10.731 ops/ms
Iteration   1: 12.282 ops/ms
Iteration   2: 13.103 ops/ms


Result "redisClientBenchmark.JedisConnection.get":
  12.692 ops/ms


# JMH version: 1.21
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 600 ms each
# Timeout: 10 min per iteration
# Threads: 100 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: redisClientBenchmark.JedisConnection.set

# Run progress: 50.00% complete, ETA 00:00:15
# Fork: 1 of 1
# Warmup Iteration   1: 10.108 ops/ms
Iteration   1: 11.513 ops/ms
Iteration   2: 10.849 ops/ms


Result "redisClientBenchmark.JedisConnection.set":
  11.181 ops/ms


# Run complete. Total time: 00:00:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt   Score   Error   Units
redisClientBenchmark.JedisConnection.get  thrpt    2  12.692          ops/ms
redisClientBenchmark.JedisConnection.set  thrpt    2  11.181          ops/ms
